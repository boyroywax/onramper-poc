"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const dynamodb_1 = require("../dynamodb");
const storage = {};
exports.default = {
    get: ({ PK, SK }) => __awaiter(void 0, void 0, void 0, function* () {
        const res = storage[dynamodb_1.constructKey(PK, SK)];
        if (res === undefined) {
            throw new Error(`Key ${dynamodb_1.constructKey(PK, SK)} not in storage`);
        }
        return res;
    }),
    put: (params) => __awaiter(void 0, void 0, void 0, function* () {
        storage[dynamodb_1.constructKey(params.PK, params.SK)] = params;
    }),
    scan: () => __awaiter(void 0, void 0, void 0, function* () { return Object.values(storage); }),
};
