"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../../errors");
const moonpayRegexes_1 = __importDefault(require("./moonpayRegexes"));
function default_1(address, cryptocurrency) {
    let valid;
    const regex = moonpayRegexes_1.default[cryptocurrency];
    if (regex === undefined) {
        try {
            // We are missing a validator for this currency, accept the address (it will end up being rejected later in the flow if it is incorrect) and notify us about the problem
            throw new errors_1.InternalError(`The moonpay adapter received a request to validate an address from cryptocurrency ${cryptocurrency} but it can't find a proper validator for it`);
        }
        catch (e) {
            valid = true;
        }
    }
    else {
        valid = regex.test(address);
    }
    return valid;
}
exports.default = default_1;
