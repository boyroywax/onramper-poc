"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTxAuthToken = exports.getCreationTx = exports.createCreationTx = void 0;
const dynamodb_1 = __importDefault(require("../utils/dynamodb"));
const errors_1 = require("../errors");
function createCreationTx(tx) {
    return dynamodb_1.default.put(tx);
}
exports.createCreationTx = createCreationTx;
function getCreationTx(id) {
    return __awaiter(this, void 0, void 0, function* () {
        const tx = yield dynamodb_1.default.get({
            PK: `tx#${id}`,
            SK: `create`,
        });
        if (tx === undefined) {
            throw new errors_1.StepError("The transaction that you are attempting to continue has not been created.", null);
        }
        return tx;
    });
}
exports.getCreationTx = getCreationTx;
function getTxAuthToken(id) {
    return __awaiter(this, void 0, void 0, function* () {
        const tx = yield dynamodb_1.default.get({
            PK: `tx#${id}`,
            SK: `verifyEmail`,
        });
        if (tx === undefined) {
            throw new errors_1.StepError("Customer hasn't been authenticated through email yet.", null);
        }
        return tx;
    });
}
exports.getTxAuthToken = getTxAuthToken;
